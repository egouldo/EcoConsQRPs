---
title: "QRPs in Ecological Modelling"
format:
  html:
    page-layout: full
editor: visual
bibliography: references.bib
editor_options: 
  chunk_output_type: inline
---

# Prepare Data

```{r}
#| label: setup
#| warning: false
#| message: false
library(tidyverse)
library(here)
library(janitor)

library(gt)
library(gtExtras)

library(ggh4x)
library(ggforce)
library(waffle)
library(ggsci)
library(hrbrthemes)

library(extrafont)
library(firasans)
extrafont::loadfonts()

source(here::here("R/tidy_QRP_database.R"))
source(here::here("R/make_table_data.R"))
source(here::here("R/make_QRP_table.R"))

```

```{r}
#| label: waffle_data_prep
#| echo: true
#| message: false
#| warning: false
waffle_plot_data <- 
        tidy_QRP_database(here::here("data", "QRP_database.csv")) %>% 
        filter(include) %>% 
        select(-notes, -model_subphase, -source, -reason_coded, -include) %>% 
        distinct() %>% #rm duplicate practice_coded #TODO next merge duplicates while keeping source
        drop_na() %>% #interim approach until datachecks in place
        mutate(model_phase = str_split(model_phase, ", "),
               target = str_split(target, ", "),
               values = 1) %>% 
        unnest(model_phase) %>% 
        unnest(target) %>% 
        complete(practice_coded, 
                 model_phase, 
                 target, 
                 fill = list(values = 0.0001) # see https://github.com/hrbrmstr/waffle/issues/66
                 ) %>%  
        group_by(practice_coded) %>% 
        fill(qrp_coded, model_phase, .direction = "downup") %>% 
        ungroup()
```

```{r}
#| label: fig-waffle_plot
#| fig-cap: "Summary of Questionable Research Practices (QRPs) in ecological modelling. QRPs may target model inputs (yellow squares), the model itself (red squares), and/or model outputs (green squares), and may occur at different phases in the modelling cycle. QRPs are grouped according to broader classes defined in @tbl-QRP-categories. See @tbl-QRP for the full list of QRPs we identified."
#| fig-width: 15
#| fig-height: 24

# options(hrbrthemes.loadfonts = TRUE)
waffle_plot_data %>% 
        distinct() %>% #TODO identify duplicated rows - suspect non-unique target coding is cause
        mutate(model_phase = 
                       forcats::as_factor(model_phase) %>% 
                       forcats::fct_relevel( c("Data", 
                                               "Model Construction", 
                                               "Model Evaluation",
                                               "Model Application"))) %>% 
        arrange(model_phase, 
                qrp_coded) %>% 
        ggplot(aes(fill = target, 
                   values = values)) +
        geom_waffle(size = 2, 
                    color = "white", 
                    make_proportional = FALSE, 
                    flip = TRUE) +
        scale_x_discrete(expand = c(0,0)) +
        scale_y_discrete(expand = c(0,0)) +
        ggsci::scale_fill_futurama(name = "QRP Target") +
        coord_equal() +
        facet_nested(qrp_coded + practice_coded ~ model_phase, 
                     switch = "y", 
                     labeller = 
                             labeller(
                                     practice_coded =
                                             label_wrap_gen(width = 80,
                                                            multi_line = TRUE),
                                     qrp_coded =
                                             label_wrap_gen(width = 10,
                                                            multi_line = TRUE),
                                     model_phase = 
                                             label_wrap_gen(width = 10, 
                                                            multi_line = TRUE)),
                     nest_line = element_line(linetype = 1),
                     solo_line = TRUE,
                     space = "free",
                     strip = strip_nested(size = "variable",
                                          clip = "off")
        ) +
        # facet_grid(practice_coded ~ model_phase, 
        #            switch = "y", 
        #            labeller = labeller(practice_coded = 
        #                                        label_wrap_gen(width = 100))) +
        # theme_no_axes() +
        hrbrthemes::theme_ipsum_rc() +
        waffle::theme_enhance_waffle() +
        theme(strip.text.y.left = element_text(angle = 0, 
                                               size = 10),
              strip.text.x = element_text(size = 14,vjust = 0),
              strip.background.x = element_part_rect(side = "b"),
              strip.background.y = element_blank()
        ) +
        ggh4x::force_panelsizes(rows = unit(1, "cm"), 
                                cols = unit(3, "cm"))
#DONE reorder the model process levels
#TODO exclude less important QRPs
#DONE Make strips pretty
#DONE recolour model object colours
#DONE group the QRPs into their umbrella terms -- nested facets?

```

```{r}
#| label: tbl-QRP-categories
#| tbl-cap: "Classes of Questionable Research Practices (QRPs) in ecological modelling."
waffle_plot_data %>% 
        distinct(qrp_coded) %>% 
        arrange(qrp_coded) %>% 
        gt::gt() %>% 
        gt::cols_label(qrp_coded = "QRP Class") %>% 
        gtExtras::gt_theme_pff() 
```

```{r}
#| label: tbl-QRP
#| result: asis
#| column: body-outset
#| warning: false
#| message: false

gt_qrp <- tidy_QRP_database(here::here("data", "QRP_database.csv")) %>% 
  make_qrp_table_data() %>% 
    select(-notes) %>% 
  make_QRP_table() %>% 
  gt::fmt_markdown(columns = c(qrp_coded, practice_coded, source)) %>% 
  gtExtras::gt_color_box(
    columns = c(-ends_with("_coded"), -source, -target),
    palette = c("lightgrey", "purple"), labels = FALSE,
    domain = c(0, 1)
  ) %>% 
  gt::cols_hide(columns = c(-ends_with("coded"), -source, -target) ) 

gt_qrp

#gt_qrp %>% gt::gtsave(path = here::here("tables"), filename = "qrp_table_draft.pdf")
```

# Notes

*Diagram*

-   QRPs on y-axis, model phase / subphase on x-axis (top facets), nested.
-   There's mark (donut) if the QRP occurs in that phase / subphase.
-   The donut is coloured according to the target of the QRP, from Figure 1: input/model/output.
-   Have simplified the phases / subphases into broader categories

*Questions*

-   [ ] What QRP grouping categories can we drop? ONLY USE ONE CATEGORY for each

-   [ ] What symbols to use?

    \- Dumping ground catgegory 'Poor Practice': for QRPs that don't fit into the other categories

    \- Examples of poor practice include: - Not validating the model on independent data: the location of the QRP is actually somewhere else... maybe with other users.

    \- engaging in commonly used techniques / practices, but that are known to be problematic, e.g. using AUC as a performance metric

    -   'incomplete' "application" or something similar. Where the full method is not applied.
    -   Misuse/Misapplication of an existing metric.

**Todo:**

-   [x] Can merge some phases / subphases
-   [x] Aggregate some QRPs, they are essentially the same

For the main figure:

-   [x] only have single groups (of QRP categories / codes `qrp_coded` ) & simplify the text (i.e. the description of each QRP `practice_coded` ).
-   [ ] For each broad category can have two example QRPs - either most important (worst outcome), and easiest to explain. Only include hard to explain QRP in if it's serious and common.

fuzzy area - poor practice vs. QRP. Potentially consider dropping some QRPs from the list.

'Not following best-modelling practice'.

QRPs invisible? Harder to spot. Incomplete reporting + ~*dishonest*~*/ambiguous/misleading* framing.

Other problems like (e.g. QRPs that are poor practice)

Incomplete reporting (QRP problem) stops you from fairly evaluating the research that was done. So if people reported their modeling proces fully then we would be able to discriminate when people are *not* doing best practice, and when they are.

-   [ ] just have table + text in supp mat.

Here's the problem. 20 years of people illustrating best-practice.

We're not going to address that.

We can't fairly evaluate the literature because of this poor transparency. Don't have to force modellers to change, but can encourage reviewers editors to push modellers' to report their modelling process more fully. reference point for reviewers to give to editor. Ammunition for reviewers to push back. Giving them language to start calling these things out. FAIRLY EVALUATING SOMEONE's WORK. We're so hard we are on people who deviate from prereg plans.

# 6 august

Have weaned out a third of them that fit squarely in "poor modelling practice" (out of 42)

But still not sure about some other ones.
